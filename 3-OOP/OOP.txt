
  OOP : Object Oriented Programming
  객체지향? -> 프로그래밍 패러다임 (프로그래밍의 여러 가지 방식 중에 하나)
  객체를 컨셉으로 프로그래밍을 해나가는 방식

  Object -> "관련된 데이터나 코드를 묶을 수 있는 것"
  
  객체지향을 사용하는 언어는
  자바, C++ 등 많이 있지만 전반적인 개념과 코딩은 크게 다르지 않아서 
  하나의 언어로 객체지향을 충분히 학습한다면 다른 프로그래밍 언어를 공부할 때에도 도움이 많이 된다.
  
  우리가 객체지향 프로그래밍 하기 전에 알아야 할 것.
    1. Imperative 명령어 and Procedural 절차 Programming
       하나의 어플리케이션을 만든다면 데이터와 함수 위주로 구성하는 것
       정의된 순서대로 (ex. main 안에 함수) 함수가 하나씩 호출하는 것이 절차지향적 프로그래밍
       단점: 신규로 프로젝트에 투입되면 하나의 수정을 위해서 전체적인 어플리케이션 동작 구성을 알아야 한다.
       그리고 Side Effect가 자주 일어난다. 즉, 유지 보수가 힘든다.

    2. 객체지향?
      서로 관련된 것을 객체 형태로 관리하는 것.
      만약 특정 함수에 에러가 난다면 관련된 오브젝트만 수정하면 된다.
      생산성을 높여주고 높은 퀄리티의 프로젝트 구성 가능하고 빠른 유지 보수가 가능하다.
      if-> 음악 플레이어라는 함수를 만든다면 음악 파일과 재생, 중단 기능의 함수를 만들 수 있다.
      이렇듯 일상생활에서 볼 수 있는 물체나 서비스 등을 오브젝트로 만들 수 있다.
      사람과 가까운 생각을 하면서 오브젝트를 구성할 수 있다.
      
      오브젝트는 class의 인스턴스다. class는 붕어빵 만드는 기계이고 오브젝트는 붕어빵이다.


객체지향에서 중요한 원칙 4가지
  1. Encapsulation
  2. Abstraction
  3. Inheritance
  4. Polymorphism 

   * Encapsulation * 캡슐화
    관련 데이터와 함수 등을 하나의 오브젝트 안에 담아두고 외부에서 보일 필요가 없는 데이터를 잘
    숨겨놓아서 캡슐화
    ex) 고양이에게 배고픔 화남 등의 내부 state를 외부에서 변경할 수 없지만 
        외부 행동(function) 예를 들어, 맛있는 간식 등을 주는 것으로 내부 state를 변경할 수 있다.

   * Abstraction * 추상성
    내부의 복잡한 기능을 다 이해하지 않고 내부 간단한 인터페이스를 통해 이용
    예를 들어, 커피머신이나 전화기 등의 내부 구조를 다 몰라도 버튼을 누르면서 이용 가능하다.
    추상화를 통해서 외부에서는 내부의 복잡함을 신경 쓰지 않고 지정된 외부에서 보이는 인터페이스를 
    함수를 이용해서 오브젝트를 사용할 수 있다.

   * Inheritance * 상속
    커피머신(Function, data1, data2)을 상속을 이용하면 커피머신 데이터를 가져오면서
    내가 조금 더 필요한 기능을 더해서 다른 종류의 커피 기계를 만들 수 있다.
    또 다른 커피 기계를 만들 수도 있다.
    상속을 이용하면 한 번 잘 만들어 놓은 클래스를 재사용 가능(parent - child // super - sub // base - derived)
    브라우저 위에서 쓰이는 돔 요소도 다 상속을 이용해서 구현되어져 있다.
    HTMLelement라는 클래스는 
    Element라는 클래스를 상속을 받았고 HTMLelement는 Element라고도 할 수 있다. 
    그런데 Document, Text, Element는 Node를 상속받았다.
    그리고 Node는 EventTarget을 상속받았다.
    그래서 EventTarget이 제일 위에 있기 때문에 밑에 쭉쭉 상속받은 애들은 이벤트 발생이 가능한 것이다.

    강아지, 돼지, 고양이는 animal이라는 상속을 받아서 특정 함수를 다 갖고 있다.
   * Polymorphism * 다양한 형태 // 다형성
    강아지, 돼지, 고양이는 animal에 정의된 함수를 모두 다 호출할 수 있다.


   